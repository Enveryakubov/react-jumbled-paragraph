{"version":3,"sources":["components/Jumbler.js","components/Speedreader.js","components/Navbar.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbler","useState","result","setResult","refff","useRef","style","backgroundColor","padding","borderRadius","color","onSubmit","e","preventDefault","current","value","alert","test","split","map","elem","length","end","ending","includes","y","slice","array","i","j","Math","floor","random","temp","shuffleArray","join","ref","type","width","height","marginBottom","name","className","onClick","fontSize","textAlign","letterSpacing","Speedreader","show","setShow","text","arr","sleep","ms","Promise","resolve","setTimeout","speed","a","prev","demo","minHeight","margin","marginTop","Navbar","setActivity","vis","setVis","display","justifyContent","paddingTop","Home","src","alt","App","activity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fb2f00c.chunk.js","sourcesContent":["import {useState, useRef} from 'react'\r\n\r\nconst Jumbler = () => {\r\n  const [result, setResult] = useState(\"\")\r\n  const refff = useRef()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (refff.current.value === \"\") {\r\n      return alert(\"Введите текст\")\r\n    }\r\n    \r\n    let test = refff.current.value.split(\" \")\r\n              .map(elem => {\r\n                if (elem.length <= 2) {return elem + \" \"}\r\n                let end = elem.length-1;\r\n                let ending = elem[elem.length-1]\r\n                if ([\".\", \",\", \"!\", \"?\"].includes(elem[elem.length-1])) {\r\n                end -= 1;\r\n                ending = elem[elem.length-2] + elem[elem.length-1]\r\n              }\r\n                let middle = elem.slice(1, end)\r\n                \r\n                \r\n                function shuffleArray(array) {\r\n                  for (let i = array.length - 1; i > 0; i--) {\r\n                      let j = Math.floor(Math.random() * (i + 1));\r\n                      let temp = array[i];\r\n                      array[i] = array[j];\r\n                      array[j] = temp;\r\n                  }\r\n\r\n                }\r\n                let y = middle.split(\"\")\r\n                shuffleArray(y)\r\n                return elem[0] + y.join(\"\") + ending + \" \"\r\n              })\r\n    setResult(test)\r\n    // refff.current.value=\"\"\r\n  }\r\n  const clearAll = () => {\r\n    refff.current.value=\"\"\r\n    setResult(\"\")\r\n  }\r\n \r\n    return (\r\n        <div>\r\n          <h1>Веселый текст</h1>\r\n          <div style={{backgroundColor:\"#c5d7bd\", padding:\"20px\", borderRadius:\"5px\"}}>\r\n              <h2 style={{color:\"white\"}}>Введите текст</h2>\r\n              <form onSubmit={submitHandler}>\r\n                  <textarea \r\n                  ref={refff}\r\n                  type=\"text\"\r\n                  style={{width:\"60%\", height:\"100px\", borderRadius:\"5px\", marginBottom:\"20px\", padding:\"20px\"}}\r\n                  name=\"Para\"\r\n                  >\r\n                  </textarea>\r\n                  <br/>\r\n                  <div className=\"jumbler-btn\">\r\n                  <button type=\"submit\" className=\"btn-main\">Обработать</button>\r\n                  {result && <button onClick={clearAll} style={{backgroundColor:\"#f0a500\"}}>Очистить все</button>}\r\n                  </div>\r\n              </form>\r\n              {result &&\r\n              <div>\r\n                <h2>Ваш текст</h2>\r\n                <div className=\"jumbler-result\">\r\n                    <p style={{fontSize:\"25px\", textAlign:\"justify\", letterSpacing:\"0.1rem\"}}>{result}</p>\r\n                </div>\r\n              </div>} \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbler\r\n","import {useState, useRef} from 'react'\r\n\r\n\r\nconst Speedreader = () => {\r\n  const [result, setResult] = useState(\"\")\r\n  const [show, setShow] = useState(true)\r\n  const refff = useRef()\r\n  const text = useRef(\"\")\r\n\r\n  \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (refff.current.value === \"\") {\r\n      return alert(\"Введите текст\")\r\n    }\r\n\r\n    setShow(!show)\r\n    text.current = refff.current.value\r\n\r\n    let arr = text.current.split(\" \")\r\n    \r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n      async function demo(speed) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n         await sleep(speed);\r\n         setResult(prev => prev + arr[i] + \" \")\r\n        }\r\n      }\r\n      demo(300)\r\n  }\r\n  const repeat = () => {\r\n    setResult(\"\")\r\n    setShow(!show)\r\n  }\r\n\r\n  const clearAll = () => {\r\n    refff.current.value=\"\"\r\n    setResult(\"\")\r\n    setShow(!show)\r\n  }\r\n    return (\r\n        <>\r\n          <h1>Скорочтение</h1>\r\n          { show &&\r\n          <div style={{backgroundColor:\"#d9dab0\", padding:\"20px\", borderRadius:\"5px\"}}>\r\n            <h2 style={{color:\"white\"}}>Введите текст</h2>\r\n            <form onSubmit={submitHandler}>\r\n              <textarea\r\n              ref={refff}\r\n              type=\"text\"\r\n              style={{width:\"60%\", height:\"100px\", borderRadius:\"5px\", marginBottom:\"20px\", padding:\"20px\"}}\r\n              name=\"Para\"\r\n              >\r\n              </textarea>\r\n              <br/>\r\n              <div className=\"jumbler-btn\">\r\n                <button type=\"submit\" className=\"btn-main\">Начать</button>\r\n                {result && <button onClick={clearAll} style={{backgroundColor:\"#7c9473\"}}>Очистить все</button>}\r\n              </div>\r\n            </form>\r\n          </div>}\r\n          { !show && \r\n          <div>\r\n            <div style={{width:\"60%\", minHeight:\"100px\", backgroundColor:\"white\", margin:'auto', textAlign:\"left\", padding:\"20px\", marginTop:\"20px\", marginBottom:\"20px\"}}>\r\n                <p>{result}</p>\r\n            </div>\r\n            <button className=\"btn-main\" onClick={repeat}>Вернуться</button>\r\n          </div>\r\n          }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Speedreader\r\n\r\n\r\n","import {useState} from 'react'\r\nimport {GiHamburgerMenu} from \"react-icons/gi\"\r\n\r\nconst Navbar = ({setActivity}) => {\r\n    const [vis, setVis] = useState(false)\r\n    // let style = vis ? {display:\"block\", zIndex:\"10\"}: {display:\"none\"}\r\n\r\n    return (    \r\n        <div style={{display:\"flex\", justifyContent:\"space-between\", backgroundColor:\"rgb(53, 51, 50)\"}}>\r\n            <ul className=\"navbar\" >\r\n                <li onClick={() => setActivity(\"home\")} >Главная</li>\r\n                <li onClick={() => setActivity(\"jumbler\")} >Чтение перемешенного текста</li>\r\n                <li onClick={() => setActivity(\"speedreader\")} >Развить скорость</li>\r\n            </ul>\r\n            <div className=\"navbur\">\r\n                <GiHamburgerMenu onClick={() => setVis(!vis)} style={{fontSize:\"50px\", color:\"white\", paddingTop:\"5px\"}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default Navbar\r\n","import React from 'react'   \r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-case\" style={{margin:\"20px\"}}>\r\n            <img style={{borderRadius:\"5px\", width:\"100%\", height:\"540px\"}} src=\"https://specials-images.forbesimg.com/imageserve/1009498682/960x0.jpg?fit=scale\" alt=\"\"/>\r\n            <div className=\"centered\">\"Мастерство приходит только с практикой и не может появиться лишь в ходе чтения инструкций.\"</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Jumbler from \"./components/Jumbler\"\nimport Speedreader from \"./components/Speedreader\"\nimport Navbar from \"./components/Navbar\"\nimport Home from \"./components/Home\"\nimport {useState} from \"react\"\n\nfunction App() {\nconst [activity, setActivity] = useState(\"home\")\n\n\n  return (\n    <div>\n      <Navbar setActivity={setActivity}/>\n      <div className=\"container\">\n        {activity === \"home\" && <Home/>}\n        {activity === \"jumbler\" && <Jumbler/>}\n        {activity === \"speedreader\" && <Speedreader/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}