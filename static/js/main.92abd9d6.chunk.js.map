{"version":3,"sources":["utils.js","components/Jumbler.js","components/Speedreader.js","components/Navbar.js","words.js","components/Option.js","components/Words.js","components/Quote.js","data.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomInt","max","Math","floor","random","shuffleArray","array","i","length","j","temp","Jumbler","useState","result","setResult","show","setShow","refff","useRef","style","display","useEffect","alert","className","marginTop","textAlign","marginBottom","backgroundColor","padding","borderRadius","paddingTop","color","onSubmit","e","preventDefault","current","value","test","split","map","elem","end","ending","includes","y","slice","join","ref","type","width","minHeight","name","marginRight","onClick","fontSize","letterSpacing","Speedreader","speed","setSpeed","text","readingSpeed","round","arr","sleep","ms","Promise","resolve","setTimeout","a","prev","demo","justifyContent","readOnly","paddingBottom","margin","Navbar","setActivity","activity","paddingLeft","words","Option","option","correct","setMessage","bgColor","setBgColor","flexBasis","height","Words","setWords","word","setWord","options","setOptions","correctAnswer","message","gameStatus","setGS","speedW","setSpeedW","displaySpeed","data","flexWrap","randomNum","t","deliver","Quote","quote","flexDirection","src","image","alt","textTransform","title","id","Home","quotes","setQuotes","setQuote","useCallback","num","interval","setInterval","clearInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92abd9d6.chunk.js","sourcesContent":["\r\n\r\nexport function getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n  }\r\n\r\nexport function shuffleArray(array) {\r\nfor (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n}}\r\n","import {useState, useRef, useEffect} from 'react'\r\nimport {shuffleArray} from \"../utils\"\r\n\r\nconst Jumbler = () => {\r\n  const [result, setResult] = useState(\"\")\r\n  const [show, setShow] = useState(true)\r\n  const refff = useRef()\r\n\r\n  const style = show ? {display:\"block\"} : {display:\"none\"}\r\n\r\n  useEffect(() => {\r\n    alert(\"По рзелульаттам илссеовадний одонго анлигйсокго унвиертисета, не иеемт занчнеия, в кокам пряокде рсапожолены бкувы в солве. Галвоне, чотбы преавя и пслоендяя бквуы блыи на мсете. Осатьлыне бкувы мгоут селдовтаь в плоонм бсепордяке, все-рвано ткест чтаитсея без побрелм. Пичрионй эгото ялвятеся то, что мы чиатем не кдаужю бкуву по отдльенотси, а все солво цликеом.\\n\\n Этот тренажер создает такие тексты. Вставьте заранее скопированный текст и развивайте данную способность.\")\r\n  },[])\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (refff.current.value === \"\") {\r\n      return alert(\"Введите текст\")\r\n    }\r\n    \r\n    let test = refff.current.value.split(\" \")\r\n              .map(elem => {\r\n                if (elem.length <= 2) {return elem + \" \"}\r\n                let end = elem.length-1;\r\n                let ending = elem[elem.length-1]\r\n                if ([\".\", \",\", \"!\", \"?\"].includes(elem[elem.length-1])) {\r\n                end -= 1;\r\n                ending = elem[elem.length-2] + elem[elem.length-1]\r\n              }\r\n                let middle = elem.slice(1, end)\r\n                \r\n                let y = middle.split(\"\")\r\n                shuffleArray(y)\r\n                return elem[0] + y.join(\"\") + ending + \" \"\r\n              })\r\n    setResult(test)\r\n    // refff.current.value=\"\"\r\n  }\r\n  const clearAll = () => {\r\n    refff.current.value=\"\"\r\n    setResult(\"\")\r\n    setShow(true)\r\n  }\r\n \r\n    return (\r\n        <div className=\"container\" style={{marginTop:\"20px\", textAlign:\"center\"}}>\r\n          <div className=\"titleCont\" style={{marginBottom:\"20px\"}}>\r\n            <div className=\"title\">Размешалка</div>\r\n          </div>\r\n          <div style={{backgroundColor:\"#c5d7bd\", padding:\"20px\", borderRadius:\"5px\", marginBottom:\"30px\", paddingTop:\"20px\"}}>\r\n                <h2 style={{color:\"#493323\"}}>{show ? \"Введите текст\": \"А вот и ваш текст\"}</h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <div style={style}>\r\n                      <textarea \r\n                      className=\"form-control\"\r\n                      ref={refff}\r\n                      type=\"text\"\r\n                      style={{width:\"100%\", minHeight:\"150px\", borderRadius:\"5px\", marginBottom:\"20px\", padding:\"20px\"}}\r\n                      name=\"Para\"\r\n                      >\r\n                      </textarea>\r\n                      <br/>\r\n                    </div>\r\n                    <div className=\"btnCol\">\r\n                      <button type=\"submit\" style={{marginRight:\"10px\"}} className=\"btn btn-success\" >Обработать</button>\r\n                      {result && <button onClick={() => setShow(!show)} className=\"btn btn-success\" style={{backgroundColor:\"#1687a7\", marginRight:\"10px\"}}>{show ? \"Закрыть оригинал\": \"Показать оригинал\"}</button>}\r\n                      {result && <button onClick={clearAll} className=\"btn btn-success\" style={{backgroundColor:\"#f0a500\"}}>Очистить все</button>} \r\n                    </div>\r\n                </form>\r\n              {result &&\r\n              <div className=\"form-control\" style={{marginTop:\"40px\"}}>\r\n                <h2>Ваш текст</h2>\r\n                <div className=\"jumbler-result\">\r\n                    <p style={{fontSize:\"20px\", textAlign:\"justify\", letterSpacing:\"0.1rem\"}}>{result}</p>\r\n                </div>\r\n              </div>} \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbler\r\n","import {useState, useRef} from 'react'\r\n\r\n\r\nconst Speedreader = () => {\r\n  const [result, setResult] = useState(\"\")\r\n  const [show, setShow] = useState(true)\r\n  const [speed, setSpeed] = useState(120)\r\n  const refff = useRef()\r\n  const text = useRef(\"\")\r\n\r\n  let readingSpeed = Math.round((60/speed)*1000)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (refff.current.value === \"\") {\r\n      return alert(\"Введите текст\")\r\n    }\r\n    if (speed <= 0) {\r\n      return alert(\"Скорость установлена не верно\")\r\n    }\r\n    if (speed > 2000) {\r\n      return alert(\"Не много ли на себя берете? )))\")\r\n    }\r\n  \r\n    setShow(!show)\r\n    text.current = refff.current.value\r\n\r\n    let arr = text.current.split(\" \")\r\n    \r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n    async function demo(speed) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        await sleep(speed);\r\n        setResult(prev => prev + arr[i] + \" \")\r\n      }\r\n      \r\n    }\r\n      demo(readingSpeed)\r\n      \r\n      \r\n      \r\n  }\r\n  const repeat = () => {\r\n    setResult(\"\")\r\n    setShow(!show)\r\n    \r\n  }\r\n\r\n  \r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"titleCont\">\r\n            <div className=\"container title\">Скорочтение</div>\r\n          </div>\r\n          { show &&\r\n          <div className=\"container sph\">\r\n            <h5 style={{color:\"#493323\"}}>1. Введите текст</h5>\r\n            <form onSubmit={submitHandler}>\r\n              <textarea\r\n              ref={refff}\r\n              type=\"text\"\r\n              style={{width:\"100%\", minHeight:\"150px\", borderRadius:\"5px\", marginBottom:\"20px\", padding:\"20px\"}}\r\n              name=\"Para\"\r\n              >\r\n              </textarea>\r\n              <br/>\r\n              <div>\r\n                <h5 style={{color:\"#493323\"}}>2. Выставите кол-во слов в минуту</h5>\r\n                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                  \r\n                    <div onClick={() => setSpeed(speed-10)} style={{width:\"45%\"}} className=\"btn btn-warning\">-</div>\r\n                    <input \r\n                    style={{textAlign:\"center\"}}\r\n                    className=\"form-control\"\r\n                    value={speed} readOnly\r\n                    />\r\n                    <div onClick={() => setSpeed(speed+10)} style={{width:\"45%\"}} className=\"btn btn-warning\">+</div>\r\n                </div>\r\n              </div>\r\n              <br/>\r\n              <h5 style={{color:\"#493323\"}}>3. Приготовтесь и начинайте</h5>\r\n              <div className=\"jumbler-btn\">\r\n                <button  type=\"submit\" className=\"btn btn-success mb-3 btnT\">Начать</button>\r\n              </div>\r\n            </form>\r\n          </div>}\r\n          { !show && \r\n          <div className=\"container\" style={{backgroundColor:\"#d9dab0\", borderRadius:\"5px\", marginTop:\"20px\", textAlign:\"center\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>\r\n            <div style={{ minHeight:\"100px\", backgroundColor:\"white\", margin:'auto', textAlign:\"left\", padding:\"20px\", marginTop:\"20px\", marginBottom:\"20px\", borderRadius:\"5px\"}}>\r\n                <p>{result}</p>\r\n            </div>\r\n            <div style={{width:\"100%\"}}>\r\n              <button className=\"btn btn-success btnT\" onClick={repeat}>Вернуться</button>\r\n            </div>\r\n          </div>\r\n          } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Speedreader\r\n\r\n\r\n","\r\nimport {FiBookOpen} from \"react-icons/fi\"\r\nimport {GiHamburgerMenu} from \"react-icons/gi\"\r\n\r\nconst Navbar = ({setActivity, activity}) => {\r\n  \r\n    \r\n\r\n    return (\r\n        <nav style={{paddingLeft:\"20px\", backgroundColor:\"#7c9473\"}} className=\"navbar navbar-light pt-10\">\r\n            <div className=\"container-fluid p-0\">\r\n                <div className=\"navbar-brand pt-0\" style={{ fontSize:\"40px\"}}>\r\n                    <div onClick={() => setActivity(\"home\")} style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <FiBookOpen />\r\n                        <h4 style={{paddingLeft:\"10px\", paddingTop:\"5px\"}}>Чтение</h4>\r\n                   </div>\r\n                </div>\r\n                {!(activity === \"home\") && <div onClick={() => setActivity(\"home\")}>\r\n                    <GiHamburgerMenu style={{fontSize:\"40px\", marginRight:\"20px\"}}/>\r\n                </div>}\r\n            </div>\r\n        </nav>\r\n        \r\n    )\r\n}   \r\n\r\nexport default Navbar\r\n","const words = [\"меха\", \"цеха\", \r\n\"думы\", \"пумы\", \"гора\", \"нора\", \r\n\"соки\", \"токи\", \"рифы\", \"мифы\",\r\n\"меха\", \"щепа\", \"репа\", \"вазы\",\r\n\"газы\", \"сани\", \"лани\", \"пари\",\r\n\"лари\", \"цари\", \"яйцо\", \"лицо\",\r\n\"пена\", \"мена\", \"шины\", \"мины\",\r\n\"мели\", \"сели\", \"дуга\", \"нуга\",\r\n\"пиры\", \"миры\", \"мера\", \"сера\",\r\n\"шали\", \"дали\", \"годы\", \"воды\",\r\n\"сети\", \"дети\", \"куры\", \"туры\",\r\n\"заря\", \"моря\", ]\r\n\r\nexport default words","import {useState} from 'react'\r\n\r\nconst Option = ({option, correct, setMessage}) => {\r\n    const [bgColor, setBgColor] = useState(\"white\")\r\n\r\n    const handleClick = () => {\r\n        if (option === correct) {\r\n            setMessage(\"success\")\r\n            return setBgColor(\"#96bb7c\")\r\n            \r\n        }\r\n        setMessage(\"failure\")\r\n        return setBgColor(\"#ec4646\")\r\n    }\r\n\r\n    return (\r\n        <div style={{flexBasis:\"45%\", textAlign:\"center\", backgroundColor:bgColor, margin:\"1%\", height:\"50px\", paddingTop:'12px', borderRadius:\"5px\"}}>\r\n            <div onClick={handleClick}>{option}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option\r\n","import {useState, useEffect, useRef} from 'react'\r\nimport data from \"../words\"\r\nimport {shuffleArray, getRandomInt} from \"../utils\"\r\nimport Option from \"./Option\"\r\nimport {FaRegThumbsUp, FaRegThumbsDown} from \"react-icons/fa\"\r\n\r\nconst Words = () => {\r\n    const [words, setWords] = useState([])\r\n    const [word, setWord] = useState(\"\")\r\n    const [options, setOptions] = useState([])\r\n    const correctAnswer = useRef(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [gameStatus, setGS] = useState(true)\r\n    const [speedW, setSpeedW] = useState(150)\r\n    \r\n    let displaySpeed = Math.round((60/speedW)*1000)\r\n\r\n    useEffect(() => {\r\n        setWords(data);\r\n        alert(\"В этом задании вам нужно вспомнить последнее слово, которое появиться на экране.\");\r\n    }, [])\r\n   \r\n    const deliver = () => {\r\n        let test = words\r\n        let randomNum = getRandomInt(words.length)\r\n        if (randomNum < 10) {randomNum += 10}\r\n        let t = test.slice(0, randomNum)\r\n        shuffleArray(t)\r\n\r\n        function sleep(ms) {\r\n            return new Promise(resolve => setTimeout(resolve, ms));\r\n        }\r\n        async function demo(speed) {\r\n            for (let i = 0; i < t.length; i++) {\r\n                await sleep(speed);\r\n                setWord(t[i])\r\n                \r\n            }\r\n            \r\n            let result = [t[t.length-2], t[t.length-3], t[3], t[Math.floor(t.length-1/2)]]\r\n            correctAnswer.current = t[t.length-2]\r\n            shuffleArray(result)\r\n            setOptions(result)\r\n            setWord(\"Какое из нижеприведенных слов было последним?\")\r\n            \r\n        }\r\n        demo(displaySpeed)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"titleCont\">\r\n                <div className=\"container title\">Разминка</div>\r\n            </div>\r\n            <div className=\"container sph word\">\r\n                <p style={{fontSize:\"24px\"}}>{word}</p>\r\n            </div>\r\n            <div className=\"container sph\">\r\n                <h5 style={{color:\"#493323\"}}>Выставите кол-во слов в минуту</h5>\r\n                <div style={{display:\"flex\", justifyContent:\"space-between\", marginBottom:\"20px\"}}>\r\n                \r\n                    <div onClick={() => setSpeedW(speedW-10)} style={{width:\"45%\"}} className=\"btn btn-warning\">-</div>\r\n                    <input \r\n                    style={{textAlign:\"center\"}}\r\n                    className=\"form-control\"\r\n                    value={speedW} readOnly\r\n                    />\r\n                    <div onClick={() => setSpeedW(speedW+10)} style={{width:\"45%\"}} className=\"btn btn-warning\">+</div>\r\n                </div>\r\n                {(message === \"success\") && <div className=\"message\">\r\n                    <p>Das ist fantastisch! !!! Если это было легко - увеличьте скорость.</p>\r\n                    <FaRegThumbsUp/>\r\n                </div>}\r\n                {(message === \"failure\") && <div className=\"message\" style={{backgroundColor:\"yellow\", color:\"black\"}}>\r\n                    <p>Неа)) !!!</p>\r\n                    <FaRegThumbsDown/>\r\n                </div>}\r\n                <div style={{display:\"flex\", flexWrap:\"wrap\", justifyContent:\"space-between\"}}>\r\n                    {options.map((option, i) => \r\n                        <Option key={i} option={option} correct={correctAnswer.current} setMessage={setMessage}/>\r\n                    )}\r\n                </div>\r\n                <div style={{textAlign:\"center\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>\r\n                    <button className=\"btn btn-success btnT\" onClick={() => {deliver(); setOptions([]); setMessage(\"\");setGS(false)}}>{gameStatus ? \"Начать\": \"Еще раз\"}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Words\r\n","import React from 'react'\r\nimport {FaQuoteRight} from \"react-icons/fa\"\r\n\r\n\r\nconst Quote = ({quote}) => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div style={{display:\"flex\", textAlign:\"center\", flexDirection:\"column\", backgroundColor:\"white\", borderRadius:\"5px\"}}>\r\n                    <div style={{width:\"200px\", margin:\"auto\"}}>\r\n                        <img src={quote.image} alt=\"problems?\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h3 style={{textTransform:\"uppercase\", color:\" rgb(180, 104, 4)\"}}>{quote.name}</h3>\r\n                        <p style={{textTransform:\"capitalize\", fontSize:\"1.1rem\", color:\"black\"}}>{quote.title}</p>\r\n                        <div>\r\n                            <p>{quote.quote}</p>\r\n                        </div>\r\n                        <FaQuoteRight  className=\"fa\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quote\r\n","\r\nconst data = [{\r\n    id: 1,\r\n    name: \"А. С. Пушкин\",\r\n    title: \"Писатель\",\r\n    quote: \"«Чтение — вот лучшее учение. Следовать за мыслями великого человека — есть наука самая занимательная.»\",\r\n    image: \"https://cdn22.img.ria.ru/images/149619/51/1496195194_0:0:2644:1487_1920x0_80_0_0_9b85f6c18f2c7929a8671020e75eb53c.jpg\" \r\n\r\n},\r\n{\r\n    id: 2,\r\n    name: \"Хемингуэй Э.\",\r\n    title: \"Писатель\",\r\n    quote: \"«Все хорошие книги сходны в одном, - когда вы дочитаете до конца, вам кажется, что все это случилось с вами, и так оно навсегда при вас и останется».\",\r\n    image: \"http://t1.gstatic.com/images?q=tbn:ANd9GcRwQ5VE8ZhxONv-Nd_4GpSVjiYT5b_D34Ye3jXwUcvCDQpR41F7fuegOAlNOUL4\" \r\n\r\n},\r\n{\r\n    id: 3,\r\n    name: \"Вольтер\",\r\n    title: \"Поэт\",\r\n    quote: \"«Читая авторов, которые хорошо пишут, привыкают хорошо говорить»\",\r\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/D%27apr%C3%A8s_Nicolas_de_Largilli%C3%A8re%2C_portrait_de_Voltaire_%28Institut_et_Mus%C3%A9e_Voltaire%29_-001.jpg/220px-D%27apr%C3%A8s_Nicolas_de_Largilli%C3%A8re%2C_portrait_de_Voltaire_%28Institut_et_Mus%C3%A9e_Voltaire%29_-001.jpg\" \r\n\r\n},\r\n// {\r\n//     id: 4,\r\n//     name: \"Сали Якубов\",\r\n//     title: \"Поэт-философ\",\r\n//     quote: \"«Чтение книг не ограничено стенами туалета»\",\r\n//     image: \"https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk4hOdNNRT2Uq7knyFAEJKpKaKTM5SRkZCeTgDn6uOyic&fn=sqr_288\" \r\n\r\n// }\r\n\r\n]\r\nexport default data","import React, {useState, useEffect, useRef, useCallback} from 'react'   \r\nimport Quote from \"./Quote\"\r\nimport data from \"../data\"\r\nimport {getRandomInt} from \"../utils\"\r\n\r\n\r\nconst Home = ({setActivity}) => {\r\n    const [quotes, setQuotes] = useState([])\r\n    const [quote, setQuote] = useState({})\r\n    const ref = useRef(0)\r\n\r\n    const random = useCallback(() => {\r\n        let num = getRandomInt(quotes.length)\r\n        ref.current = num\r\n        setQuote(quotes[ref.current])\r\n    }, [quotes])\r\n    \r\n\r\n    useEffect(() => {\r\n        setQuotes(data)\r\n        setQuote(quotes[ref.current])\r\n        let interval = setInterval(() => random(), 4000)\r\n        return () => clearInterval(interval)\r\n    }, [quotes, random])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{backgroundColor:\"white\", marginTop:\"40px\", textAlign:\"center\", padding:\"10px\", width:\"80%\", borderRadius:'5px', marginBottom:\"20px\"}}>\r\n                <h3>Тренажеры</h3>\r\n                <div className=\"container\" style={{marginTop:\"10%\"}}>\r\n                    <button onClick={() => setActivity(\"words\")} className=\"btn btn-secondary mb-2 homeBtn\">Разминка</button>\r\n                    <button onClick={() => setActivity(\"speedreader\")} className=\"btn btn-secondary mb-2 homeBtn\" >Скорочтение</button>\r\n                    <button onClick={() => setActivity(\"jumbler\")} className=\"btn btn-secondary mb-2 homeBtn\">Размешалка</button>\r\n                    <button onClick={() => alert(\"Скоро будет еще)\")} className=\"btn btn-warning mb-2 homeBtn\" >Eще ...</button>\r\n                </div>\r\n            </div>\r\n            {quote && <div className=\"container\" style={{backgroundColor:\"white\", marginTop:\"5px\", padding:\"10px\", width:\"80%\", borderRadius:'5px', marginBottom:\"10px\"}}>\r\n                <Quote quote={quote}/>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Jumbler from \"./components/Jumbler\"\nimport Speedreader from \"./components/Speedreader\"\nimport Navbar from \"./components/Navbar\"\nimport Words from \"./components/Words\"\nimport Home from \"./components/Home\"\nimport {useState} from \"react\"\n\nfunction App() {\nconst [activity, setActivity] = useState(\"home\")\n\n\n  return (\n    <div>\n      <Navbar setActivity={setActivity} activity={activity}/>\n      <div className=\"container\">\n        {activity === \"home\" && <Home setActivity={setActivity}/>}\n        {activity === \"jumbler\" && <Jumbler/>}\n        {activity === \"speedreader\" && <Speedreader/>}\n        {activity === \"words\" && <Words/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}