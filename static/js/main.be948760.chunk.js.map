{"version":3,"sources":["components/Jumbler.js","components/Speedreader.js","components/Navbar.js","components/Quote.js","data.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbler","useState","result","setResult","show","setShow","refff","useRef","style","display","className","marginTop","textAlign","marginBottom","backgroundColor","padding","borderRadius","paddingTop","color","onSubmit","e","preventDefault","current","value","alert","test","split","map","elem","length","end","ending","includes","y","slice","array","i","j","Math","floor","random","temp","shuffleArray","join","ref","type","width","minHeight","name","marginRight","onClick","fontSize","letterSpacing","Speedreader","speed","setSpeed","text","readingSpeed","round","arr","sleep","ms","Promise","resolve","setTimeout","a","prev","demo","justifyContent","readOnly","paddingBottom","margin","Navbar","setActivity","paddingLeft","Quote","quote","flexDirection","src","image","alt","textTransform","title","data","id","Home","quotes","setQuotes","setQuote","useCallback","max","num","useEffect","interval","setInterval","clearInterval","App","activity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be948760.chunk.js","sourcesContent":["import {useState, useRef} from 'react'\r\n\r\nconst Jumbler = () => {\r\n  const [result, setResult] = useState(\"\")\r\n  const [show, setShow] = useState(true)\r\n  const refff = useRef()\r\n\r\n  const style = show ? {display:\"block\"} : {display:\"none\"}\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (refff.current.value === \"\") {\r\n      return alert(\"Введите текст\")\r\n    }\r\n    \r\n    let test = refff.current.value.split(\" \")\r\n              .map(elem => {\r\n                if (elem.length <= 2) {return elem + \" \"}\r\n                let end = elem.length-1;\r\n                let ending = elem[elem.length-1]\r\n                if ([\".\", \",\", \"!\", \"?\"].includes(elem[elem.length-1])) {\r\n                end -= 1;\r\n                ending = elem[elem.length-2] + elem[elem.length-1]\r\n              }\r\n                let middle = elem.slice(1, end)\r\n                \r\n                \r\n                function shuffleArray(array) {\r\n                  for (let i = array.length - 1; i > 0; i--) {\r\n                      let j = Math.floor(Math.random() * (i + 1));\r\n                      let temp = array[i];\r\n                      array[i] = array[j];\r\n                      array[j] = temp;\r\n                  }\r\n\r\n                }\r\n                let y = middle.split(\"\")\r\n                shuffleArray(y)\r\n                return elem[0] + y.join(\"\") + ending + \" \"\r\n              })\r\n    setResult(test)\r\n    // refff.current.value=\"\"\r\n  }\r\n  const clearAll = () => {\r\n    refff.current.value=\"\"\r\n    setResult(\"\")\r\n    setShow(true)\r\n  }\r\n \r\n    return (\r\n        <div className=\"container\" style={{marginTop:\"20px\", textAlign:\"center\"}}>\r\n          <div className=\"titleCont\" style={{marginBottom:\"20px\"}}>\r\n            <div className=\"title\">Размешалка</div>\r\n          </div>\r\n          <div style={{backgroundColor:\"#c5d7bd\", padding:\"20px\", borderRadius:\"5px\", marginBottom:\"30px\", paddingTop:\"20px\"}}>\r\n                <h2 style={{color:\"#493323\"}}>{show ? \"Введите текст\": \"А вот и ваш текст\"}</h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <div style={style}>\r\n                      <textarea \r\n                      className=\"form-control\"\r\n                      ref={refff}\r\n                      type=\"text\"\r\n                      style={{width:\"100%\", minHeight:\"150px\", borderRadius:\"5px\", marginBottom:\"20px\", padding:\"20px\"}}\r\n                      name=\"Para\"\r\n                      >\r\n                      </textarea>\r\n                      <br/>\r\n                    </div>\r\n                    <div className=\"btnCol\">\r\n                      <button type=\"submit\" style={{marginRight:\"10px\"}} className=\"btn btn-success\" >Обработать</button>\r\n                      {result && <button onClick={() => setShow(!show)} className=\"btn btn-success\" style={{backgroundColor:\"#1687a7\", marginRight:\"10px\"}}>{show ? \"Закрыть оригинал\": \"Показать оригинал\"}</button>}\r\n                      {result && <button onClick={clearAll} className=\"btn btn-success\" style={{backgroundColor:\"#f0a500\"}}>Очистить все</button>} \r\n                    </div>\r\n                </form>\r\n              {result &&\r\n              <div className=\"form-control\" style={{marginTop:\"40px\"}}>\r\n                <h2>Ваш текст</h2>\r\n                <div className=\"jumbler-result\">\r\n                    <p style={{fontSize:\"20px\", textAlign:\"justify\", letterSpacing:\"0.1rem\"}}>{result}</p>\r\n                </div>\r\n              </div>} \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbler\r\n","import {useState, useRef} from 'react'\r\n\r\n\r\nconst Speedreader = () => {\r\n  const [result, setResult] = useState(\"\")\r\n  const [show, setShow] = useState(true)\r\n  const [speed, setSpeed] = useState(120)\r\n  const refff = useRef()\r\n  const text = useRef(\"\")\r\n\r\n  let readingSpeed = Math.round((60/speed)*1000)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (refff.current.value === \"\") {\r\n      return alert(\"Введите текст\")\r\n    }\r\n    if (speed <= 0) {\r\n      return alert(\"Скорость установлена не верно\")\r\n    }\r\n    if (speed > 2000) {\r\n      return alert(\"Не много ли на себя берете? )))\")\r\n    }\r\n  \r\n    setShow(!show)\r\n    text.current = refff.current.value\r\n\r\n    let arr = text.current.split(\" \")\r\n    \r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n      async function demo(speed) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n         await sleep(speed);\r\n         setResult(prev => prev + arr[i] + \" \")\r\n        }\r\n        \r\n      }\r\n      demo(readingSpeed)\r\n      \r\n      \r\n      \r\n  }\r\n  const repeat = () => {\r\n    setResult(\"\")\r\n    setShow(!show)\r\n    \r\n  }\r\n\r\n  \r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"titleCont\">\r\n            <div className=\"container title\">Скорочтение</div>\r\n          </div>\r\n          { show &&\r\n          <div className=\"container sph\" style={{backgroundColor:\"#d9dab0\", borderRadius:\"5px\", marginTop:\"20px\", textAlign:\"center\", paddingTop:\"20px\"}}>\r\n            <h5 style={{color:\"#493323\"}}>1. Введите текст</h5>\r\n            <form onSubmit={submitHandler}>\r\n              <textarea\r\n              ref={refff}\r\n              type=\"text\"\r\n              style={{width:\"100%\", minHeight:\"150px\", borderRadius:\"5px\", marginBottom:\"20px\", padding:\"20px\"}}\r\n              name=\"Para\"\r\n              >\r\n              </textarea>\r\n              <br/>\r\n              <h5 style={{color:\"#493323\"}}>2. Выставите кол-во слов в минуту</h5>\r\n              <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                \r\n                  <div onClick={() => setSpeed(speed-10)} style={{width:\"45%\"}} className=\"btn btn-warning\">-</div>\r\n                  <input \r\n                  style={{textAlign:\"center\"}}\r\n                  className=\"form-control\"\r\n                  value={speed} readOnly\r\n                  />\r\n                  <div onClick={() => setSpeed(speed+10)} style={{width:\"45%\"}} className=\"btn btn-warning\">+</div>\r\n              </div>\r\n              <br/>\r\n              <h5 style={{color:\"#493323\"}}>3. Приготовтесь и начинайте</h5>\r\n              <div className=\"jumbler-btn\">\r\n                <button  type=\"submit\" className=\"btn btn-success mb-3 btnT\">Начать</button>\r\n              </div>\r\n            </form>\r\n          </div>}\r\n          { !show && \r\n          <div className=\"container\" style={{backgroundColor:\"#d9dab0\", borderRadius:\"5px\", marginTop:\"20px\", textAlign:\"center\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>\r\n            <div style={{ minHeight:\"100px\", backgroundColor:\"white\", margin:'auto', textAlign:\"left\", padding:\"20px\", marginTop:\"20px\", marginBottom:\"20px\", borderRadius:\"5px\"}}>\r\n                <p>{result}</p>\r\n            </div>\r\n            <div style={{width:\"100%\"}}>\r\n              <button className=\"btn btn-success btnT\" onClick={repeat}>Вернуться</button>\r\n            </div>\r\n          </div>\r\n          } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Speedreader\r\n\r\n\r\n","\r\nimport {FiBookOpen} from \"react-icons/fi\"\r\n\r\nconst Navbar = ({setActivity}) => {\r\n  \r\n    \r\n\r\n    return (\r\n        <nav style={{paddingLeft:\"20px\", backgroundColor:\"#7c9473\"}} className=\"navbar navbar-light pt-10\">\r\n            <div className=\"container-fluid p-0\">\r\n                <div className=\"navbar-brand pt-0\" style={{ fontSize:\"40px\"}}>\r\n                    <div onClick={() => setActivity(\"home\")} style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                   <FiBookOpen />\r\n                   <h4 style={{paddingLeft:\"10px\", paddingTop:\"5px\"}}>Чтение</h4>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        \r\n         /* // <div style={{display:\"flex\", justifyContent:\"space-between\", backgroundColor:\"rgb(53, 51, 50)\", marginBottom:\"20px\"}}>\r\n        //     <ul className=\"navbar\" >\r\n        //         <li onClick={() => setActivity(\"home\")} >Главная</li>\r\n        //         <li onClick={() => setActivity(\"jumbler\")} >Чтение перемешенного текста</li>\r\n        //         <li onClick={() => setActivity(\"speedreader\")} >Развить скорость</li>\r\n        //     </ul>\r\n        // \r\n        // </div> */  \r\n       \r\n    )\r\n}   \r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport {FaQuoteRight} from \"react-icons/fa\"\r\n\r\n\r\nconst Quote = ({quote}) => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div style={{display:\"flex\", textAlign:\"center\", flexDirection:\"column\", backgroundColor:\"white\", borderRadius:\"5px\"}}>\r\n                    <div style={{width:\"200px\", margin:\"auto\"}}>\r\n                        <img src={quote.image} alt=\"problems?\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h3 style={{textTransform:\"uppercase\", color:\" rgb(180, 104, 4)\"}}>{quote.name}</h3>\r\n                        <p style={{textTransform:\"capitalize\", fontSize:\"1.1rem\", color:\"black\"}}>{quote.title}</p>\r\n                        <div>\r\n                            <p>{quote.quote}</p>\r\n                        </div>\r\n                        <FaQuoteRight  className=\"fa\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quote\r\n","\r\nconst data = [{\r\n    id: 1,\r\n    name: \"А. С. Пушкин\",\r\n    title: \"Писатель\",\r\n    quote: \"«Чтение — вот лучшее учение. Следовать за мыслями великого человека — есть наука самая занимательная.»\",\r\n    image: \"https://cdn22.img.ria.ru/images/149619/51/1496195194_0:0:2644:1487_1920x0_80_0_0_9b85f6c18f2c7929a8671020e75eb53c.jpg\" \r\n\r\n},\r\n{\r\n    id: 2,\r\n    name: \"Хемингуэй Э.\",\r\n    title: \"Писатель\",\r\n    quote: \"«Все хорошие книги сходны в одном, - когда вы дочитаете до конца, вам кажется, что все это случилось с вами, и так оно навсегда при вас и останется».\",\r\n    image: \"http://t1.gstatic.com/images?q=tbn:ANd9GcRwQ5VE8ZhxONv-Nd_4GpSVjiYT5b_D34Ye3jXwUcvCDQpR41F7fuegOAlNOUL4\" \r\n\r\n},\r\n{\r\n    id: 3,\r\n    name: \"Вольтер\",\r\n    title: \"Поэт\",\r\n    quote: \"««Читая авторов, которые хорошо пишут, привыкают хорошо говорить»\",\r\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/D%27apr%C3%A8s_Nicolas_de_Largilli%C3%A8re%2C_portrait_de_Voltaire_%28Institut_et_Mus%C3%A9e_Voltaire%29_-001.jpg/220px-D%27apr%C3%A8s_Nicolas_de_Largilli%C3%A8re%2C_portrait_de_Voltaire_%28Institut_et_Mus%C3%A9e_Voltaire%29_-001.jpg\" \r\n\r\n},\r\n// {\r\n//     id: 4,\r\n//     name: \"Сали Якубов\",\r\n//     title: \"Поэт-философ\",\r\n//     quote: \"«Чтение книг не ограничено стенами туалета»\",\r\n//     image: \"https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk4hOdNNRT2Uq7knyFAEJKpKaKTM5SRkZCeTgDn6uOyic&fn=sqr_288\" \r\n\r\n// }\r\n\r\n]\r\nexport default data","import React, {useState, useEffect, useRef, useCallback} from 'react'   \r\nimport Quote from \"./Quote\"\r\nimport data from \"../data\"\r\n\r\n\r\nconst Home = ({setActivity}) => {\r\n    const [quotes, setQuotes] = useState([])\r\n    const [quote, setQuote] = useState({})\r\n    const ref = useRef(0)\r\n\r\n    function getRandomInt(max) {\r\n        return Math.floor(Math.random() * max);\r\n      }\r\n\r\n    const random = useCallback(() => {\r\n        let num = getRandomInt(quotes.length)\r\n        ref.current = num\r\n        setQuote(quotes[ref.current])\r\n    }, [quotes])\r\n    \r\n\r\n    useEffect(() => {\r\n        setQuotes(data)\r\n        setQuote(quotes[ref.current])\r\n        let interval = setInterval(() => random(), 4000)\r\n        return () => clearInterval(interval)\r\n    }, [quotes, random])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{backgroundColor:\"white\", marginTop:\"40px\", textAlign:\"center\", padding:\"10px\", width:\"80%\", borderRadius:'5px', marginBottom:\"20px\"}}>\r\n                <h3>Тренажеры</h3>\r\n                <div className=\"container\" style={{marginTop:\"10%\"}}>\r\n                    <button onClick={() => setActivity(\"speedreader\")} className=\"btn btn-secondary mb-2 homeBtn\" >Скорочтение</button>\r\n                    <button onClick={() => setActivity(\"jumbler\")} className=\"btn btn-secondary mb-2 homeBtn\">Размешалка</button>\r\n                    <button onClick={() => alert(\"Скоро будет еще)\")} className=\"btn btn-warning mb-2 homeBtn\" >Eще ...</button>\r\n                </div>\r\n            </div>\r\n            {quote && <div className=\"container\" style={{backgroundColor:\"white\", marginTop:\"5px\", padding:\"10px\", width:\"80%\", borderRadius:'5px', marginBottom:\"10px\"}}>\r\n                <Quote quote={quote}/>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Jumbler from \"./components/Jumbler\"\nimport Speedreader from \"./components/Speedreader\"\nimport Navbar from \"./components/Navbar\"\nimport Home from \"./components/Home\"\nimport {useState} from \"react\"\n\nfunction App() {\nconst [activity, setActivity] = useState(\"home\")\n\n\n  return (\n    <div>\n      <Navbar setActivity={setActivity}/>\n      <div className=\"container\">\n        {activity === \"home\" && <Home setActivity={setActivity}/>}\n        {activity === \"jumbler\" && <Jumbler/>}\n        {activity === \"speedreader\" && <Speedreader/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}